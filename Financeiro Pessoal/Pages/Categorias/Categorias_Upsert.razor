@page "/categorias/adicao"
@page "/categorias/edicao/{id:int}"
@inherits API

<div class="container">
    <div class="upsert-form-title">
        <h1>@(ID == 0 ? "Adição de Categoria" : "Edição de Categoria")</h1>
    </div>

    <EditForm Model="Categoria" OnValidSubmit="Confirmar" OnInvalidSubmit="Invalido" class="upsert-form row">
        <DataAnnotationsValidator />
        <ValidationSummary/>

        <div class="col-sm-12">
            
        </div>

        <div class="col-sm-6">
            <label>Descrição</label>
            <input type="text" @bind="Categoria.Descricao">
        </div>

        <div class="col-sm-6">
            <label>Status</label>
            <div class="upsert-form-checkbox">
                <input type="checkbox" id="categoria-status" @bind="Categoria.Status">
                <label for="categoria-status">@(Categoria.Status ? "Categoria Ativa" : "Categoria Inativa")</label>
            </div>
        </div>

        <div class="col-sm-12 upsert-form-buttons">
            <button type="submit">@(ID == 0 ? "Salvar" : "Atualizar")</button>
            <a href="/categorias">Listagem</a>
            @if (ID != 0)
            {
                <button type="button">Apagar</button>
            }
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public int ID { get; set; }
    public Categoria Categoria { get; set; } = new Categoria();

    protected override async Task OnInitializedAsync()
    {
        if (ID == 0) Adicao();
        else await Edicao();
    }

    private void Adicao()
    {
        Categoria = new Categoria { ID = 0, Tipo = 0 };
    }

    private async Task Edicao()
    {
        Categoria = await GetCategoria(ID);
    }

    private async Task Confirmar()
    {
        if (ID == 0) await Salvar();
        else await Atualizar();

        Navigation.NavigateTo("/categorias");
    }

    private async Task Invalido(EditContext context)
    {

    }

    private async Task Salvar()
    {
        await PostCategoria(Categoria);
    }

    private async Task Atualizar()
    {
        await PutCategoria(Categoria);
    }
}