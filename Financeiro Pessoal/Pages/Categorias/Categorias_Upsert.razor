@page "/categorias/adicao"
@page "/categorias/edicao/{id:int}"
@inherits API

<main>
    <h1 class="form-title">@(ID == 0 ? "Adição de Categoria" : "Edição de Categoria")</h1>

    @if (Categoria is null)
    {
        <p class="alerta">Carregando</p>
    }
    else
    {
        <EditForm Model="Categoria" OnValidSubmit="Confirmar" OnInvalidSubmit="Invalido" class="form">
            <DataAnnotationsValidator />

            <div class="w-8">
                <label>Descrição</label>
                <input type="text" @bind="Categoria.Descricao">
            </div>

            <div class="w-2">
                <label>Tipo</label>
                <select @bind="Categoria.Tipo">
                    <option value="1">Receita</option>
                    <option value="2">Despesa</option>
                </select>
            </div>

            <div class="w-2 div-align">
                <input type="checkbox" id="categoria-status" @bind="Categoria.Status">
                <label for="categoria-status">@(Categoria.Status ? "Categoria Ativa" : "Categoria Inativa")</label>
            </div>
            
            <div class="w-12">
                <button type="submit" class="btn-classic">@(ID == 0 ? "Salvar" : "Atualizar")</button>
                <a href="/categorias" class="btn-classic">Listagem</a>
            </div>
        </EditForm>
    }
</main>

@code {
    [Parameter] public int ID { get; set; }
    public Categoria Categoria { get; set; } = new Categoria();

    protected override async Task OnInitializedAsync()
    {
        if (ID == 0) Adicao();
        else await Edicao();
    }

    private void Adicao()
    {
        Categoria = new Categoria { Tipo = 0, Status = true };
    }

    private async Task Edicao()
    {
        Categoria = await GetCategoria(ID);
    }

    private async Task Confirmar()
    {
        if (ID == 0) await Salvar();
        else await Atualizar();

        Navigation.NavigateTo("/categorias");
    }

    private async Task Invalido(EditContext context)
    {
        await JS.Alerta("Ops!", StringFormat.ContextErrors(context.GetValidationMessages()), "error");
    }

    private async Task Salvar()
    {
        await PostCategoria(Categoria);
    }

    private async Task Atualizar()
    {
        await PutCategoria(Categoria);
    }
}